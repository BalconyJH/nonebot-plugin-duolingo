[project]
name = "nonebot-plugin-duolingo"
version = "0.1.0"
authors = [{ name = "BalconyJH", email = "BalconyJH@gmail.com" }]
description = "Nonebot plugin for Duolingo"
readme = "README.md"
license = { file = "LICENSE" }
keywords = ['duolingo']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "nonebot2>=2.2.0",
    "nonebot-plugin-apscheduler>=0.4.0",
    "nonebot-plugin-localstore>=0.6.0",
    "nonebot-plugin-alconna>=0.49.0",
    "nonebot-plugin-uninfo>=0.6.2",
]

[dependency-groups]
dev = [
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.22.0",
    "pyright[nodejs]>=1.1.391",
    "ruff>=0.9.2",
    "bump-my-version>=0.25.4",
    "nonebot-adapter-onebot>=2.4.4",
]
test = [
    "pytest-cov~=5.0",
    "pytest-xdist~=3.6",
    "pytest-asyncio~=0.23",
    "pytest-mock>=3.14.0",
    "nonebug>=0.4.3",
]
doc = [
    "mkdocstrings[python]>=0.26.1",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
]

[project.urls]
Homepage = "https://github.com/BalconyJH/nonebot-plugin-duolingo"
Repository = "https://github.com/BalconyJH/nonebot-plugin-duolingo.git"
Issues = "https://github.com/BalconyJH/nonebot-plugin-duolingo/issues"
Changelog = "https://github.com/BalconyJH/nonebot-plugin-duolingo/blob/main/CHANGELOG.md"

[tool.ruff]
line-length = 88
target-version = "py39"
fix = true

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "I",     # isort
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "PLE",   # Pylint errors
    "NPY",   # NumPy-specific rules
    "TC",    # flake8-type-checking
    "RUF",   # Ruff-specific rules
    "TRY",   # flake8-try-except
    "C90",   # mccabe
    "A",     # flake8-annotations
    "B",     # flake8-bugbear
    "S",     # flake8-bandit
    "YTT"    # flake8-2020
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.format]
line-ending = "lf"
preview = true

[tool.ruff.lint.isort]
length-sort = false
force-sort-within-sections = true
known-first-party = ["nonebot_plugin_duolingo", "tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
venv = ".venv"
executionEnvironments = [
    { root = "./tests", extraPaths = [
        "./",
    ] },
    { root = "./" },
]
typeCheckingMode = "standard"

[tool.uv.pip]
universal = true

[tool.poe.tasks]
test = "pytest --cov=nonebot_plugin_duolingo --cov-report xml --junitxml=./junit.xml -n auto"
"test:single" = "pytest --cov=nonebot_plugin_duolingo --cov-report xml --junitxml=./junit.xml"
# async sqlalchemy 需要使用 gevent 才能获得正确覆盖率
# https://github.com/nedbat/coveragepy/issues/1082
"test:gevent" = "coverage run --concurrency=thread,gevent -m pytest --cov=nonebot_plugin_duolingo --cov-report xml --junitxml=./junit.xml -n auto"
# Python 3.12 下需要启用 sysmon 模式，否则测试速度非常慢
# https://github.com/nedbat/coveragepy/issues/1665
"test:sysmon".ref = "test"
"test:sysmon".env = { "COVERAGE_CORE" = "sysmon" }
bump = "bump-my-version bump"
show-bump = "bump-my-version show-bump"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["nonebot_plugin_duolingo"]

[tool.hatch.build.targets.sdist]
only-include = ["nonebot_plugin_duolingo"]

[tool.nonebot]
plugins = ["nonebot_plugin_duolingo"]
adapters = [
    { name = "OneBot V12", module_name = "nonebot.adapters.onebot.v12", project_link = "nonebot-adapter-onebot", desc = "OneBot V12 协议" },
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11", project_link = "nonebot-adapter-onebot", desc = "OneBot V11 协议" },
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError:",
]
omit = ["*/compat.py", "*/migrations/*"]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.bumpversion]
current_version = "0.1.0"
commit = true
message = "chore(release): {new_version}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = "## [Unreleased]\n\n## [{new_version}] - {now:%Y-%m-%d}"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
regex = true
search = "\\[Unreleased\\]: (https://.+?)v{current_version}\\.\\.\\.HEAD"
replace = "[Unreleased]: \\1v{new_version}...HEAD\n[{new_version}]: \\1v{current_version}...v{new_version}"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
